@use 'functions' as *;

@mixin inline ($type: left, $size: m) {
  $space: get-space($size);

  @if ($type == left) {
    margin-right: $space;
    margin-left: 0;
  }

  @else if ($type == right) {
    margin-right: 0;
    margin-left: $space;
  }
}

@mixin inline-group ($type: left, $size: m, $alignment: flex-start) {
  $exception: '';

  display: inline-flex;
  flex-wrap: wrap;
  align-items: $alignment;
  flex-direction: initial;

  @if ($type == left) {
    $exception: ':last-child';

    justify-content: flex-start;
  }

  @else if ($type == right) {
    $exception: ':first-child';

    justify-content: flex-end;
  }

  & > *:not(#{unquote($exception)}) {
    @include inline($type, $size);
  }
}

@mixin inset ($type: default, $size: m) {
  @if ($type == default) {
    $space: get-space($size);

    padding-top: $space;
    padding-right: $space;
    padding-bottom: $space;
    padding-left: $space;
  }

  @else {
    $vertical-space: get-space(m);
    $horizontal-space: get-space(m);

    @if ($type == squish) {
      $vertical-space: get-prev-space($size);
      $horizontal-space: get-space($size);
    }

    @else if ($type == stretch) {
      $vertical-space: get-next-space($size);
      $horizontal-space: get-space($size);
    }

    padding-top: $vertical-space;
    padding-right: $horizontal-space;
    padding-bottom: $vertical-space;
    padding-left: $horizontal-space;
  }
}

@mixin inset-group ($type: default, $size: m) {
  & > * {
    @include inset($type, $size);
  }
}

@mixin stack ($size: m) {
  $space: get-space($size);

  margin-bottom: $space;
}

@mixin stack-group ($size: m) {
  display: flex;
  flex-direction: column;

  & > *:not(:last-child) {
    @include stack($size);
  }

  & > *:last-child {
    margin-bottom: 0;
  }
}

@mixin paddingless ($important: false, $type: box) {
  $important: if($important, unquote('!important'), unquote(''));

  @if $type == box {
    padding: 0 #{$important};
  }

  @else if $type == horizontal {
    padding-right: 0 #{$important};
    padding-left: 0 #{$important};
  }

  @else if $type == vertical {
    padding-top: 0 #{$important};
    padding-bottom: 0 #{$important};
  }
}
