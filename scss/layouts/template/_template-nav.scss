@import '../../abstracts/colors';
@import '../../abstracts/icon';
@import '../../abstracts/typography';
@import '../../abstracts/menu';
@import '../../abstracts/dimensions';

.ch-template-nav {

  // 1. Base

  display: flex;
  justify-content: space-between;
  position: fixed;
  bottom: 0;
  left: 0;
  
  width: 100%;
  background-color: ch-get-color(neutral, 1, inverse);

  // 2. Brand

  &-brand {
    display: none;
    position: relative;

    height: #{ch-get-dimension(1)};
    padding-left: #{ch-get-dimension(1)};

    &-icon {
      position: absolute;
      top: 50%;
      left: calc(#{ch-get-dimension(1)} / 2);
      transform: translate(-50%, -50%);

      width: calc(#{ch-get-dimension(1)} - 2 * #{ch-get-space(s)});
      height: calc(#{ch-get-dimension(1)} -  2 * #{ch-get-space(s)});
    }

    &-name {
      color: #{ch-get-color(text, 1, inverse)};
      font-family: #{ch-get-text-font-family(brand)};
      font-size: #{ch-get-text-size(5)};
      line-height: #{ch-get-dimension(1)};
    }
  }

  // 3. Menu

  &-menu {

    // 3.1. Item

    .ch-menu-item {
      color: #{ch-get-color(text, 2, inverse)};

      // 3.1.1. Label

      &-label {
        font-weight: ch-get-text-weight(bold);
      }

      // 3.1.2. Focus interaction
  
      &:hover:focus,
      &:focus,
      &:hover {
        background: transparent;
  
        &,
        > .ch-icon {
          color: #{ch-get-color(text, 1, inverse)};
        }
      }

      // 3.1.3. Active state
  
      &.is-active {

        // 3.1.3.1. Label
        
        > .ch-menu-item-label {
          color: #{ch-get-color(text, 1, inverse)};
        }

        // 3.1.3.2. Icon

        > .ch-icon:first-child {
          color: ch-get-color(brand, 1);
        }
      }
    }
  }

  // 4. Is open state

  &:not(.is-open) > .ch-template-nav-menu {

    // 4.1. Base

    @extend %ch-menu-horizontal;
    
    width: 80%;
    justify-content: space-around;
  
    // 4.2. Menu item

    > * {
      flex-basis: 100%;

      &:not(:nth-child(1)):not(:nth-child(2)):not(:nth-child(3)):not(:nth-child(4)) {
        display: none;
      }
    }

    > .ch-menu-item,
    > .ch-menu-submenu > .ch-menu-item {
      // TODO
      padding-left: 0 !important;
      padding-right: 0 !important;
      height: #{ch-get-dimension(1)};

      // 4.2.1. Icon

      &.has-icon > .ch-icon {
        left: 50%;
      }

      // 4.2.2. Arrow and label

      > .ch-menu-item-arrow,
      > .ch-menu-item-label {
        display: none;
      }
  
      // 4.2.3. Bottom bar

      &.is-active:before {
        width: ch-get-icon-size();
        height: var(--ch-space-xxs);
        top: auto;
        left: 50%;
        transform: translateX(-50%);
      }
    }
  }

  // 5. Toggle

  &-toggle {
    width: 20%;
  }
}
