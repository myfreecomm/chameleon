@import '../../abstracts/box-model';
@import '../../abstracts/border';
@import '../../abstracts/colors';
@import '../../abstracts/icon';
@import '../../abstracts/helpers';
@import '../../abstracts/space';
@import '../../abstracts/typography';
@import '../../abstracts/ripple-effect';

.ch-button {

  // 1. Base

  @include ch-ripple-effect(ch-get-color(neutral, 1));
  @include ch-box-model(s, squish, box, ch-get-color(default));
  @include ch-border-radius(1);

  display: inline-block;

  cursor: pointer;
  color: #{ch-get-color(text, 1, inverse)};
  font-weight: #{ch-get-text-weight(bold)};
  text-align: center;
  background-color: #{ch-get-color(default)};

  // 1.1. Focus interaction

  &:hover:focus,
  &:hover,
  &:focus {
    border-color: #{ch-get-color(default, focus)};
    background-color: #{ch-get-color(default, focus)};
  }
  
  // 1.2. Active interaction
  
  &:active {
    border-color: #{ch-get-color(default, active)};
    background-color: #{ch-get-color(default, active)};
  }

  // 1.3. Disabled interaction

  &:disabled,
  &.is-disabled {
    @include ch-disabled;

    &:after {
      display: none;
    }
  }

  // 2. Color variations

  @each $type in (brand, primary, negative) {
    &--#{$type} {
      border-color: #{ch-get-color($type)};
      background-color: #{ch-get-color($type)};

      // 2.1. Focus interaction
  
      &:hover:focus,
      &:hover,
      &:focus {
        border-color: #{ch-get-color($type, focus)};
        background-color: #{ch-get-color($type, focus)};
      }

      // 2.2. Active interaction

      &:active {
        border-color: #{ch-get-color($type, acitve)};
        background-color: #{ch-get-color($type, active)};
      }
    }
  }

  // 3. Outiline and ghost variation

  &--outline,
  &--ghost {
    color: #{ch-get-color(text, 2)};

    // 3.1. Focus and active interaction

    &:hover:focus,
    &:hover,
    &:focus,
    &:active {
      color: #{ch-get-color(text, 1)};
    }

    &,
    &:hover:focus,
    &:hover,
    &:focus,
    &:active {
      background: transparent;
    }

    // 3.2. Ripple effect

    &:after {
      background: #{ch-get-color(default)};
    }

    // 3.3. Color variations

    @each $type in (brand, primary, negative) {
      @at-root &.ch-button--#{$type} {
        color: #{ch-get-color($type)};

        // 3.3.1. Focus interaction

        &:hover:active,
        &:hover,
        &:focus {
          color: #{ch-get-color($type, focus)};
        }
        
        // 3.3.2. Active interaction
  
        &:active {
          color: #{ch-get-color($type, active)};
        }

        // 3.3.3. Ripple effect

        &:after {
          background: #{ch-get-color($type)};
        }
      }
    }
  }

  // 4. Outiline variation

  &--outline {
    border-color: #{ch-get-color(default)};

    // 4.1. Focus interaction

    &:hover:active,
    &:hover,
    &:focus {
      border-color: #{ch-get-color(default, focus)};
    }
    
    // 4.2. Active interaction
    
    &:active {
      border-color: #{ch-get-color(default, active)};
    }

    // 4.3. Color variations

    @each $type in (brand, primary, negative) {
      @at-root &.ch-button--#{$type} {
        border-color: #{ch-get-color($type)};
  
        // 4.3.1. Focus interaction
  
        &:hover:active,
        &:hover,
        &:focus {
          border-color: #{ch-get-color($type, focus)};
        }
        
        // 4.3.2. Active interaction
  
        &:active {
          border-color: #{ch-get-color($type, active)};
        }
      }
    }
  }

  // 5. Ghost variation

  &--ghost {
    &,
    &:hover:focus,
    &:hover,
    &:focus,
    &:active {
      border-color: transparent;
    }

    // 5.1. Color variations

    @each $type in (brand, primary, negative) {
      @at-root &.ch-button--#{$type} {
        color: #{ch-get-color($type)};

        // 5.1.1. Focus interaction
        
        &:focus:hover,
        &:focus,
        &:hover {
          color: #{ch-get-color($type, focus)};
        }
        
        // 5.1.2. Active interaction

        &:active {
          color: #{ch-get-color($type, active)};
        }
      }
    }
  }

  // 6. Small variation

  &--small {
    @include ch-space-inset(squish, xs);
  }

  // 7. Icon variation

  &--icon {
    @include ch-icon-only(xs);

    > .ch-icon:first-child {
      font-size: #{ch-get-icon-size(s)};
    }

    &.ch-button--small {
      @include ch-icon-only(xxs);

      > .ch-icon:first-child {
        font-size: #{ch-get-icon-size(xs)};
      }
    }
  }

  // 8. Mock Label

  &--mockLabel {
    margin-top: #{ch-get-mock-text-size()};
  }
}
