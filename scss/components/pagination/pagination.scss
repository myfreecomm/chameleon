.ch-pagination {

  // 1. Base

  @include ch-space-inline-group(right, xs);

  vertical-align: middle;

  // 2. Item

  &-item {
    $box-size: calc(#{ch-calc-box-height()} + 2 * #{$ch-border-width});
    $icons: (
      first: $ch-icon-angle-double-left,
      previous: $ch-icon-angle-left,
      gap: $ch-icon-ellipsis,
      next: $ch-icon-angle-right,
      last: $ch-icon-angle-double-right
    );

    // 2.1. Base

    @include ch-border-radius(1);
    @include ch-border();

    display: flex;
    align-items: center;
    justify-content: center;

    color: ch-get-color(text, 1);
    padding-right: ch-get-space(xs);
    padding-left: ch-get-space(xs);
    height: $box-size;
    max-height: $box-size;
    min-width: $box-size;
    text-align: center;
    background-color: ch-get-color(neutral, 1);

    &:not(#{&}--previous):not(#{&}--next):not(.is-active) {
      @include ch-media(to, tablet) {
        display: none;
      }
    }

    // 2.2. Interactions

    &:not(#{&}--gap) {
      &:hover:focus,
      &:focus,
      &:hover,
      &:active {
        color: currentColor;
        background-color: ch-get-color(neutral, 2);
      }

      &:hover:focus,
      &:focus,
      &:hover {
        border-color: ch-get-color(border, focus);
      }
  
      &:active {
        border-color: ch-get-color(border, active);
      }
    }

    // 2.3. Icon variations

    @each $type, $icon in $icons {
      &--#{$type} > *[class="ch-icon"] {
        @include ch-mask-icon($icon);

        height: ch-get-icon-size(m);
      }
    }

    // 2.4. Gap variations

    &--gap {
      border-color: transparent;

      > *[class="ch-icon"] {
        background: ch-get-color(text, 2);
      }

      > .ch-icon {
        color: ch-get-color(text, 2);
      }

      &:hover:focus,
      &:focus,
      &:hover,
      &:active {
        > *[class="ch-icon"] {
          background: ch-get-color(text, 1);
        }

        > .ch-icon {
          color: ch-get-color(text, 1);
        }
      }
    }

    // 2.5. Active state

    &.is-active,
    &.is-active:hover:focus,
    &.is-active:focus,
    &.is-active:hover,
    &.is-active:active {
      color: ch-get-color(primary);
      border-color: ch-get-color(primary);
      background-color: ch-get-color(neutral, 1);
    }
  }

  // 3. Field

  > .ch-field > label,
  > .ch-field > .ch-field-label {
    font-weight: ch-get-text-weight(regular);
    margin-right: ch-get-space(xs);
  }

  .ch-input {
    width: ch-get-dimension(1);
  }

  // 4. Select

  > .ch-select {
    @include ch-media(to, mobile) {
      display: none;
    }
  }

  // 3. Small variation
  
  $root: &;

  &--small {
    #{$root}-item {
      $box-size: calc(
        #{ch-calc-box-height(ch-get-text-size(2), ch-get-space(xxs))} + 2 * #{$ch-border-width}
      );

      padding-right: ch-get-space(xxs);
      padding-left: ch-get-space(xxs);
      height: $box-size;
      max-height: $box-size;
      min-width: $box-size;
    }
  }

  // 4. Disabled state

  > .ch-pagination-item:not(.ch-pagination-item--gap).is-disabled
  > .ch-pagination-item:not(.ch-pagination-item--gap)[disabled] {
    background-color: ch-get-color(neutral, 2);
  }

  @at-root .is-disabled .ch-pagination-item:not(.ch-pagination-item--gap) {
    background-color: ch-get-color(neutral, 2);
  }
}
