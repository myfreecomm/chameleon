@use '../../foundation/motion' as motion;
@use '../../foundation/depth' as depth;
@use '../../foundation/sizes' as sizes;
@use '../../foundation/colors' as colors;
@use '../../foundation/breakpoints' as breakpoints;

.ch-template-nav {
  // 1. Base

  @include motion.transition(unquote('width, height, bottom'));

  display: flex;
  z-index: depth.get-z-index(2, 3);
  justify-content: space-between;
  position: fixed;
  bottom: 0;
  left: 0;

  width: 100%;
  height: sizes.get-size(1);
  background-color: colors.get-color(navy);

  // 2. Open state

  &.is-open {
    z-index: depth.get-z-index(3);
    flex-direction: column;

    height: 100%;
  }

  // 3. Hide state

  &.is-hidden {
    @include breakpoints.media(from, tablet) {
      bottom: 0;
    }

    bottom: -100%;
  }

  // 4. From tablet

  @include breakpoints.media(from, tablet) {
    position: fixed;
    z-index: depth.get-z-index(3);
    flex-direction: column;
    top: 0;
    left: 0;

    overflow: hidden;
    width: sizes.get-size(1);
    height: 100vh;

    &.is-expanded,
    &.is-hovered {
      z-index: depth.get-z-index(3);

      width: sizes.get-size(2);
    }

    &.is-hovered {
      &:not(.is-expanded) {
        @include depth.shadow(3, right-left);
      }
    }

    + .ch-template-header,
    + .ch-template-header ~ .ch-template-content {
      margin-left: sizes.get-size(1);
    }

    &.is-expanded + .ch-template-header,
    &.is-expanded + .ch-template-header ~ .ch-template-content {
      margin-left: sizes.get-size(2);
    }
  }
}
