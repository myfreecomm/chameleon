@use '../../foundation/breakpoints' as breakpoints;
@use '../../foundation/colors' as colors;
@use '../../foundation/motion' as motion;
@use '../../foundation/sizes' as sizes;

.ch-template-nav {
  > .ch-brand {

    // 1. Base

    position: absolute;
    opacity: 0;
    visibility: hidden;

    height: #{sizes.get-size(1)};
    padding-left: #{sizes.get-size(1)};

    // 2. Icon

    img,
    .ch-brand-icon {
      top: 50%;
      left: calc(#{sizes.get-size(1)} / 2);
      transform: translate(-50%, -50%);
    }

    // 3. Name

    .ch-brand-name {
      @include motion.transition(opacity, motion.$transition-duration-fast);

      color: colors.get-color(text, 1, inverse);
      line-height: sizes.get-size(1);
      opacity: 0;
    }
  }

  // 4. Open state

  &.is-open {
    > .ch-brand {
      position: relative;
      opacity: 1;
      visibility: visible;

      .ch-brand-name {
        opacity: 1;
      }
    }
  }

  // 5. From tablet

  @include breakpoints.media(from, tablet) {
    > .ch-brand {
      position: relative;
      opacity: 1;
      visibility: visible;

      .ch-brand-name {
        overflow: hidden;
        opacity: 1;
      }
    }

    &:not(:hover):not(.is-expanded) {
      > .ch-brand .ch-brand-name {
        opacity: 0;
      }
    }

    &:focus:hover,
    &:focus,
    &:hover {
      &:not(.is-expanded) {
        > .ch-brand .ch-brand-name {
          opacity: 1;
        }
      }
    }
  }
}
