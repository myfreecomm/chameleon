@use '../../foundation/colors' as colors;
@use '../../foundation/depth' as depth;
@use '../../foundation/motion' as motion;
@use '../../foundation/spaces' as spaces;

.ch-overlay {
  @include motion.transition(unquote('visibility, opacity'));

  // 1. Base

  position: fixed;
  top: 0;
  left: 0;
  z-index: depth.get-z-index(5);

  width: 100%;
  height: 100%;
  background-color: colors.get-color(overlay);

  // 2. Visible state

  &:not(.is-visible) {
    visibility: hidden;
    opacity: 0;
  }

  &.is-visible {
    visibility: visible;
    opacity: 1;
  }

  // 3. Content

  &-content {
    @include spaces.inset();

    display: flex;
    align-items: center;
    justify-content: center;

    width: 100%;
    height: 100%;
  }

  // 5. Inside variation

  &--inside {
    position: absolute;
  }

  // 6. Inverse variation

  &--inverse {
    background-color: colors.get-color(overlay, inverse);
  }
}
