@use '../../foundation/borders' as borders;
@use '../../foundation/breakpoints' as breakpoints;
@use '../../foundation/colors' as colors;
@use '../../foundation/depth' as depth;
@use '../../foundation/thypography' as thypography;
@use '../../foundation/motion' as motion;
@use '../../foundation/sizes' as sizes;
@use '../../foundation/spaces' as spaces;
@use '../../foundation/helpers' as helpers;
@use '../button' as button;
@use '../icon' as icon;
@use '../menu' as menu;

.ch-dropdown.ch-dropdown--actions {
  // 1. For media up to tablet

  @include breakpoints.media(to, tablet) {
    // 1.1. Card

    > .ch-overlay > .ch-card {
      display: flex;
      flex-direction: column;

      // 1.1.1. Menu

      > .ch-menu {
        &:not(:last-child):before {
          @include borders.border(top);

          display: block;

          content: '';
          margin: spaces.get-space(s);
        }

        &:not(:last-child) {
          order: 2;
        }

        > .ch-menu-item--icon {
          padding-top: spaces.get-space(s) !important;
          padding-right: spaces.get-space(xs) !important;
          padding-bottom: spaces.get-space(s) !important;
          padding-left: sizes.get-size(1) !important;

          width: 100%;
          min-height: auto;

          > .ch-icon {
            left: calc(#{sizes.get-size(1)} / 2);
          }

          > .ch-menu-item-label {
            display: block;
          }
        }
      }
    }
  }

  // 2. For media from desktop

  @include breakpoints.media(from, desktop) {
    display: inline-flex;

    // 2.1. Overlay

    > .ch-overlay {
      visibility: visible;
      position: relative;
      z-index: initial;

      margin-top: 0;
      min-width: auto;
      background: transparent;

      &:not(.is-visible) {
        max-width: initial;
        min-width: initial;
        max-height: initial;
        min-height: initial;
      }

      // 2.1.1. Card

      &,
      > .ch-card {
        opacity: 1;
      }

      > .ch-card {
        border: 0;
        box-shadow: none;
      }

      // 2.1.2. Menu

      > .ch-card > .ch-menu:first-child {
        @include menu.horizontal;

        overflow: auto;

        > .ch-menu-item,
        > .ch-menu-submenu > .ch-menu-item {
          @include button.ripple-effect(colors.get-color(default));
          @include borders.border-radius(1);

          color: colors.get-color(text, 2);

          &.has-leadingIcon,
          &.has-trailingIcon,
          &.ch-menu-item--icon {
            > .ch-icon {
              font-size: icon.get-icon-size(s);
            }
          }

          &:hover:focus,
          &:hover,
          &:focus {
            color: colors.get-color(text, 1);
            background: transparent;
          }
        }

        > .ch-menu-item:not(.ch-menu-item--icon),
        > .ch-menu-submenu > .ch-menu-item:not(.ch-menu-item--icon) {
          $box-height: helpers.calc-box-height(
            thypography.get-font-size(),
            spaces.get-space(xxs),
            spaces.get-space(xxs)
          );

          @include spaces.inset(squish, xs);

          &.has-leadingIcon {
            @include icon.has-icon(leading, $box-height);
          }

          &.has-trailingIcon {
            @include icon.has-icon(trailing, $box-height);
          }
        }

        > .ch-menu-item--icon {
          @include icon.icon-only(xxs);
        }
      }
    }

    // 2.2. Secondary actions context

    &:not(.has-secondaryActions) > .ch-dropdown-toggle {
      display: none;
    }

    &.has-secondaryActions {
      position: relative;

      > .ch-dropdown-toggle {
        order: 2;
      }

      > .ch-overlay {
        margin: 0;
      }

      > .ch-overlay > .ch-card {
        overflow: initial;
      }

      > .ch-overlay > .ch-card > .ch-menu:not(:first-child) {
        @include depth.shadow(2);
        @include borders.border-radius(2);
        @include borders.border;
        @include motion.transition(
          unquote('visibility, opacity'),
          motion.$transition-duration-very-fast
        );

        position: absolute;
        visibility: hidden;

        opacity: 0;
        width: auto;
        min-width: sizes.get-size(2);
        height: auto;
        overflow-x: hidden;
        overflow-y: auto;
      }

      > .ch-overlay.is-visible > .ch-card > .ch-menu:not(:first-child) {
        visibility: visible;

        opacity: 1;
      }
    }
  }

  > .ch-overlay > .ch-card {
    @include spaces.paddingless;
  }
}
