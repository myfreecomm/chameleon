@use '../../foundation/breakpoints' as breakpoints;
@use '../../foundation/spaces' as spaces;
@use '../../foundation/motion' as motion;
@use '../../foundation/colors' as colors;
@use '../../foundation/borders' as borders;
@use '../../foundation/thypography' as thypography;

.ch-steps {
  // 1. Base

  @include breakpoints.media(from, tablet) {
    @include spaces.inline-group;
  }

  display: flex;
  flex-direction: row;
  position: relative;

  counter-reset: steps;
  max-width: 100%;
  overflow-x: auto;

  &:not(#{&}--vertical) {
    @include spaces.inline-group(left, s);

    flex-wrap: nowrap;
  }

  // 2. Vertical variation

  &--vertical {
    @include spaces.stack-group(s);

    overflow-x: initial;
    padding-bottom: 0;
  }

  // 3. Item

  &-item {
    @include motion.transition(opacity);

    display: flex;
    flex-direction: column;
    justify-content: center;
    position: relative;

    padding-left: spaces.get-space(xl);
    min-height: spaces.get-space(xl);

    counter-increment: steps;
    opacity: 0.6;

    // 3.1. Label

    &-label {
      @include breakpoints.media(from, tablet) {
        display: block;
        padding-top: 0;
      }

      display: none;
      width: max-content;
  
      padding-left: spaces.get-space(s);
    }

    // 3.2. Active state

    &.is-active {
      flex: 1;

      .ch-steps-item-label {
        display: block;
      }
    }

    // 3.3. Active, visited or completed states
  
    &.is-active,
    &.is-visited,
    &.is-completed {
      opacity: 1;
  
      > .ch-title {
        color: colors.get-color(primary);
      }
    }

    &.is-active {
      @include breakpoints.media(from, tablet) {
        flex-grow: 0;
      }
    }
  
    // 3.4. Interactive variation
  
    // 3.4.1. Focus interaction
  
    &:hover:focus,
    &:focus,
    &:hover {
      color: colors.get-color(primary, focus);
      opacity: 1;
    }
  
    // 3.4.2. Active interaction
  
    &:active {
      color: colors.get-color(primary, active);
      opacity: 1;
    }
  
    // 3.5. Vertical
  
    @at-root .ch-steps.ch-steps--vertical #{&}-label {
      display: block;
      width: auto;
    }

    // 3.6. Counter

    &:before {
      @include borders.border(box, colors.get-color(border), solid, borders.$border-width);
      @include thypography.label;
      @include motion.transition(unquote('border, background'));

      $counter: counter(steps);

      display: flex;
      align-items: center;
      justify-content: center;
      top: 0;
      left: 0;
      position: absolute;

      content: $counter;
      width: spaces.get-space(xl);
      height: spaces.get-space(xl);
      background: transparent;
      border-radius: borders.get-border-radius(circle);

      text-align: center;
      vertical-align: middle;
    }

    // 3.6.1. Active and visited states

    &.is-active,
    &.is-visited {
      &:before {
        color: colors.get-color(primary);
        border-color: colors.get-color(primary);
      }
    }

    // 3.6.2. Complete state

    &.is-completed {
      &:before {
        color: colors.get-color(text, 1, inverse);
        border-color: colors.get-color(primary);
        background: colors.get-color(primary);
      }
    }

    // 3.6.3. Interactive

    @at-root a#{&} {
      // 3.6.3.1. Active and Visited interaction

      &.is-active,
      &.is-visited {
        // 3.6.3.1.1. Focus interaction

        &:hover:focus,
        &:hover,
        &:focus {
          &:before {
            color: colors.get-color(primary, focus);
            border-color: colors.get-color(primary, focus);
          }
        }

        // 3.6.3.1.2. Active interaction

        &:active {
          &:before {
            color: colors.get-color(primary, active);
            border-color: colors.get-color(primary, active);
          }
        }
      }

      // 3.6.3.2. Completed interaction

      &.is-completed {
        //3.6.3.2.1. Focus interaction

        &:hover:focus,
        &:hover,
        &:focus {
          &:before {
            background: colors.get-color(primary, focus);
            border-color: colors.get-color(primary, focus);
          }
        }

        // 3.6.3.2.2. Active interaction

        &:active {
          &:before {
            background: colors.get-color(primary, active);
            border-color: colors.get-color(primary, active);
          }
        }
      }
    }
  }
}
