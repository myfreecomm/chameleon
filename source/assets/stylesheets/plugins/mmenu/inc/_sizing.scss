//	Sizing left (default)
@mixin mm_sizing( $cls: "",
	$width: $mm_width, $minWidth: $mm_minWidth, $maxWidth: $mm_maxWidth
) {
	.mm-menu#{$cls}
	{
		width: percentage( $width );
		min-width: $minWidth;
		max-width: $maxWidth;
	}
	html.mm-opening#{$cls}
	{
		.mm-slideout
		{
			@include mm-webkit-prefix( 'transform', translate( percentage( $width ), 0 ) );
		}
	}
	@media all and (max-width: $minWidth / $width ) {
		html.mm-opening#{$cls}
		{
			.mm-slideout
			{
				@include mm-webkit-prefix( 'transform', translate( $minWidth, 0 ) );
			}
		}
	}
	@media all and (min-width: $maxWidth / $width ) {
		html.mm-opening#{$cls}
		{
			.mm-slideout
			{
				@include mm-webkit-prefix( 'transform', translate( $maxWidth, 0 ) );
			}
		}
	}
}

//	Sizing right
@mixin mm_sizing_right( $cls: "",
	$width: $mm_width, $minWidth: $mm_minWidth, $maxWidth: $mm_maxWidth
) {
	html.mm-right.mm-opening#{$cls}
	{
		.mm-slideout
		{
			@include mm-webkit-prefix( 'transform', translate( -( percentage( $width ) ), 0 ) );
		}
	}
	@media all and ( max-width: $minWidth / $width ) {
		html.mm-right.mm-opening#{$cls}
		{
			.mm-slideout
			{
				@include mm-webkit-prefix( 'transform', translate( -$minWidth, 0 ) );
			}
		}
	}
	@media all and ( min-width: $maxWidth / $width ) {
		html.mm-right.mm-opening#{$cls}
		{
			.mm-slideout
			{
				@include mm-webkit-prefix( 'transform', translate( -$maxWidth, 0 ) );
			}
		}
	}
}
